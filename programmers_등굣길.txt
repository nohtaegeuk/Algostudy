class Solution {
    public int solution(int m, int n, int[][] puddles) {
        int answer = 0;
        
        // 배열 만들기. 1,1부터 시작됨.
        int [][] map = new int [n+1][m+1];
        
        map[1][1] = 1;
        
        //웅덩이 갯수만큼 웅덩이 위치에 2로 표시해줌. n하고 m위치 볼것
        for(int[] puddle : puddles) {
            map[puddle[1]][puddle[0]] = 2;
        }
        
        //검색시작.
        for( int i = 1; i < n+1; i++ ) {
            for(int j = 1; j < m+1; j++) {
                
                if(map[i][j] == 2) { // 웅덩이라면 
                    map[i][j] = 0;
                    continue;
                } else {
                    // 1이 아니라면 계속해서 더 해주어야함 근데어차피 다 작은수이므로 여기서 나눠서 더해줌.
                    if( i != 1) {
                        map[i][j] += map[i-1][j] % 1000000007;
                    }
                    // 1이 아니라면 계속 바로 옆에 것만 더해주면 됨. 다른거 신경쓰지않고.
                    if( j != 1 ){
                        map[i][j] += map[i][j-1] % 1000000007;
                    }
                }
                
                
            }
        }
        
        // 도착지점에 도착했을 때 값을 나눠줌.
        answer = map[n][m] % 1000000007;
        
        
        
        
        return answer;
    }
}