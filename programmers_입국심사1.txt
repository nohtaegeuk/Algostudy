import java.util.*;
import java.io.*;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Queue;

class Solution {
    public long solution(int n, int[] times) {
        
        long answer = 0;
        
        int length = times.length; // 길이만큼 정해줌
        
        Arrays.sort(times); // 걸리는 시간크기만큼 정렬해주기.
        
        long left = 1; // 1명이상.
        long right = n * (long)times[length - 1]; // 가장 오래걸리는 것은 심사관이 n명이 보는것이 최대가된다.
        
        long result = 0; // 합
        
        while( left <= right) { // 왼쪽부터 검색시작하는데
            long middle = (left + right) / 2; // 중간지점까지만 검사하는거
            result = 0; // 검사할때마다 0으로 초기화
            
            for(int i = 0; i < length; i++) {
                result += middle / times[i]; // 여기서 더해준 값을 각 times에 시간대로 나누어서 적립해줌
            }
            
            if( result < n) {
                left = middle+1; // 만약에 여기서 불가능하면 시간을 더 많이 추가
            } else {
                right = middle-1; // 가능하다면 시간을 줄여주기.
                answer = middle;
            }
        }
        return answer;
    }
}