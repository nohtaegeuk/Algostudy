package test2;

import java.util.*;
import java.io.*;


   class Solution {
		
	   static int answer;
	   
		public static void main(String[] args) {

			
			int[] numbers = {1,1,1,1,1};
		    
			int target = 3;
		    
			
		    Solution solution = new Solution();
	    
		    System.out.println(solution.solution(numbers, target));
		    
		}
		
		
		public int solution(int[] numbers, int target) {
		      
		  answer = 0;
			
		  
		  dfs( numbers, target, 0, 0);
		  
			
		  return answer;
			
		}

		// 인덱스의 현재 위치를 now라고 하고 더해준 값을 sum으로 한다.
		private void dfs(int[] numbers, int target, int now, int sum) {
			// TODO Auto-generated method stub
			
			
			// 인덱스의 위치가 맨 마지막 까지 도달했으면 모든 경우의 수 끝에
			if( now == numbers.length) {
				
				//tareget과 sum의 값이 같다면
				if( target == sum) {
					answer++;
					
				}
				
				return;
			}
			
			
			// sum에 현재 인덱스의 값을 넣어주고
			sum += numbers[now];
			
			// 인덱스 위치를 하나 오른쪽으로 넘겨서 다시 dfs함 처음에는 +일떄
			dfs(numbers, target, now+1, sum);
			
			// 처음에 더해주었던걸 다시 뺴주고
			sum -= numbers[now];
			
			// 이번엔 첨에 -로 시작해서 dfs도림
			sum += (numbers[now] * -1);
			
			
			// 마찬가지로 인덱스 위치를 하나씩 오른쪽으로 옮기면서 dfs
			dfs(numbers, target, now+1, sum);
			
			
			
		}
		
	
		
		
}

